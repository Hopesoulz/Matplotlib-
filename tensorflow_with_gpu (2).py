# -*- coding: utf-8 -*-
"""TensorFlow with GPU

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/notebooks/gpu.ipynb
"""

import matplotlib.pyplot as plt
import numpy as np

x=np.array([1,2,6,8])
y=np.array([3,8,1,10])

plt.plot(x,y)
plt.show()

"""# Tensorflow with GPU

This notebook provides an introduction to computing on a [GPU](https://cloud.google.com/gpu) in Colab. In this notebook you will connect to a GPU, and then run some basic TensorFlow operations on both the CPU and a GPU, observing the speedup provided by using the GPU.

## Enabling and testing the GPU

First, you'll need to enable GPUs for the notebook:

- Navigate to Editâ†’Notebook Settings
- select GPU from the Hardware Accelerator drop-down

Next, we'll confirm that we can connect to the GPU with tensorflow:
"""

import matplotlib.pyplot as plt


x = [1, 2, 3, 4, 5]
y = [1, 4, 9, 16, 25]


plt.plot(x, y)


plt.title('Oddiy Chiziqli Grafik')


plt.xlabel('X qiymatlari')
plt.ylabel('Y qiymatlari')


p lt.show()

"""## Observe TensorFlow speedup on GPU relative to CPU

This example constructs a typical convolutional neural network layer over a
random image and manually places the resulting ops on either the CPU or the GPU
to compare execution speed.
"""

import matplotlib.pyplot as plt


x = [1, 2, 3, 4, 5]
y = [5, 4, 3, 2, 1]


plt.scatter(x, y)


plt.title('Yoqubjanov Umidjon')


plt.xlabel('X qiymatlari')
plt.ylabel('Y qiymatlari')


plt.show()

import matplotlib.pyplot as plt


x = [1, 2, 3, 4, 5]
y = [5, 4, 3, 2, 1]


plt.scatter(x, y)


plt.title('Scatter Diagramma')


plt.xlabel('X qiymatlari')
plt.ylabel('Y qiymatlari')


plt.show()

